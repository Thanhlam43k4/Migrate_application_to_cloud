  version : '3'
  services:
    #mysql_server container
    mysql_server:
      container_name: mysql_server
      build:
        context:  ./mysql
        dockerfile: Dockerfile
      environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_USER=root
      - MYSQL_PASSWORD=root
      - MYSQL_DATABASE=customer_db
      networks:
      - micro-dev-net
    #Front_end container
    front_end:
      container_name: front_end
      build:
        context: ./frontend
        dockerfile: Dockerfile
      ports:
      - "3000:3000"
      restart: always
      depends_on:
      - "customer"
      - "product"
      - "mysql_sever"
      env_file:
        - .env
      networks:
        - micro-dev-net
    #Customer container 

    customer:
      container_name: customer
      build:
       context: ./customer
       dockerfile: Dockerfile 
      ports:
        - "8003:8003" 
      restart: always
      depends_on:
      - mysql_server
      env_file:
        - .env 
      networks:
        - micro-dev-net
    #Product container
    product:
      container_name: product
      build:
       context: ./product
       dockerfile: Dockerfile
      ports:
        - "8001:8001" 
      restart: always
      depends_on:
      - mysql_server
      env_file:
        - .env 
      networks:
        - micro-dev-net
      
    #Shopping container
    shopping:
      container_name: shopping
      build:
       context: ./shopping
       dockerfile: Dockerfile
      ports:
        - "8002:8002" 
      restart: always
      depends_on:
      - mysql_server
      env_file:
        - .env 
      networks:
        - micro-dev-net

    #Nginx container
    nginx:
      container_name: nginx
      build:
        context: ./proxy
      depends_on:
      - "front_end"
      ports:
      - "80:80"
      env_file:
        - .env
      networks:
        - micro-dev-net

  networks:
    micro-dev-net:
      external: true  